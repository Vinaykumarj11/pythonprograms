# -*- coding: utf-8 -*-
"""jan9.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1YlXim1X966KtxqLWWm0pYlGNTFfCboED
"""

n=int(input())
x=input().split(" ")
p=[]
n=[]
np=[]
l=[]
fl=[]
for i in range(n):
  fl.append(x[i])
for i in range(n):
  if(fl[i]>0):
    p.append(fl[i])
  elif(fl[i]<0):
    n.append(fl[i])
  else:
    np.append(fl[i])
lp=len(p)
ln=len(n)
print(lp)
print(ln)

n=int(input())
x=input().split()
x=[int(i) for i in x]
e=[]
o=[]
a=[]
for i in x:
    if(i%2==0):
        e.append(i)
    else:
        o.append(i)
#e.sort()
#o.sort()
a=e+o
print(a)

KEYS=['name','age','branch']
VALUES=["abc",'100',"aeronautical"]
details=zip(keys,values)
Dict=dict(details)
print(Dict)

arr=[[0,0,0,1,0],
     [2,0,0,0,3],
     [0,0,0,4,0]]
dic={}

for i in range(len(arr)):
  for j in range(len(arr[i])):
    if arr[i][j]!=0:
      dic[i,j]=arr[i][j]
print(dic)

String=input()
for i in String:
    count = 0
    for j in String:
        if i == j:
            count+=1
        if count > 1:
            break
    if count == 1:
        print(i,end = " ")

class Node:
   def __init__(self, num):
      self.num=num
      self.next=None

class llist:
   def __init__(self):
      self.head=None
   def push(self,newnum):
     newnum=Node(newnum)
     newnum.next=self.head
     self.head=newnum
list1=llist()
list1.headval = Node("1")
e2=Node("3")
e3=Node("5")
e4=Node("8")

list1.head.next= e2

e2.next=e3

e3.next=e4

list1.listprint()

